//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace prjAdmin.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Data.Entity;
    using System.Linq;
    using System.Web.Mvc;

    public partial class Dish
    {
        public int Id { get; set; }

        [DisplayName("類別編號")]
        [Required(ErrorMessage = "請輸入類別編號")]
        public int CategoryId { get; set; }

        [DisplayName("排序")]
        [Required(ErrorMessage = "請輸入排序")]
        public Nullable<int> Sort { get; set; }

        [DisplayName("品名")]
        [Required(ErrorMessage = "請輸入品名")]
        public string Name { get; set; }

        [DisplayName("圖片")]
        public string Img { get; set; }

        public int State { get; set; }

        [DisplayName("建立時間")]
        public Nullable<System.DateTime> CreateTime { get; set; }

        [DisplayName("商品資料")]
        public string Code { get; set; }

        [DisplayName("更新時間")]
        public Nullable<System.DateTime> UpdateTime { get; set; }

        public SelectList selectLists { get; set; }

    }

    //public partial class dbOrderFoodEntities : DbContext
    //{
    //    public dbOrderFoodEntities()
    //    {
    //        ChangeTracker.AutoDetectChangesEnabled = true;
    //    }

    //    public DbSet<Dish> Dishes { get; set; }

    //    public override int SaveChanges()
    //    {
    //        var modifiedEntries = ChangeTracker.Entries()
    //            .Where(x => x.Entity is Dish && (x.State == EntityState.Added || x.State == EntityState.Modified));

    //        foreach (var entry in modifiedEntries)
    //        {
    //            var dish = (Dish)entry.Entity;
    //            dish.UpdateTime = DateTime.Now; // 或者使用其他您想要的時間

    //            // 如果您需要在新增資料時也更新UpdateTime，可以將下面的條件修改為 EntityState.Added
    //            if (entry.State == EntityState.Modified)
    //            {
    //                // 可以在這裡執行其他需要的邏輯
    //            }
    //        }

    //        return base.SaveChanges();
    //    }
    //}


}
