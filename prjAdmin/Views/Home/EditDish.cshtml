@model prjAdmin.Models.Dish

@{
    ViewBag.Title = "編輯菜品";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <h2 class="mb-4">編輯菜品</h2>
    @using (Html.BeginForm("EditDish", "Home"))
    {
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.CategoryId)
        @Html.AntiForgeryToken()
        <div class="card p-4">
            <div class="row mb-3">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "form-label" })
                </div>
                <div class="col-md-10">
                    <select id="CategoryList" class="form-control">
                        @foreach (var item in Model.selectLists)
                        {
                            if (item.Value == ViewBag.select)
                            {
                                <option value="@item.Value" selected>@item.Text</option>
                            }
                            else {
                                <option value="@item.Value">@item.Text</option>
                            }
                        }
                    </select>
                    @*@Html.DropDownList("CategoryList", (SelectList)ViewBag.selectList, new { @class = "form-control" })*@
                    @*@Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control", Type = "text" } })*@
                    @*@Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.Img, htmlAttributes: new { @class = "form-label" })
                </div>
                @using (Html.BeginForm("Upload", "Home", FormMethod.Post, new { enctype = "multipart/form-data", id = "uploadForm" }))
                {
                    <div class="col-md-10">
                        <div class="card">
                            <div class="card-body">
                                <div class="form-group" id="img_Dish">
                                    <input type="file" id="upload-input" class="form-control-file" name="file">
                                </div>
                                <div id="preview-container" class="text-center mt-3">
                                    <img id="preview-image" class="rounded-circle" src="../Img/product/@Model.Img" style="width: 200px;" />
                                    <i id="preview-icon" class="fas fa-plus fa-3x mt-3"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @Html.EditorFor(model => model.Img, new { htmlAttributes = new { @class = "form-control d-none" } })
                @*@Html.ValidationMessageFor(model => model.Img, "", new { @class = "text-danger" })*@
                @*<input class="text-box single-line d-none" id="Img" name="Img" type="text" value="">*@

            </div>

            <div class="row mb-3">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.Sort, htmlAttributes: new { @class = "form-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "form-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (ViewBag.Error != null)
            {
                <div class="alert alert-danger">
                    <strong>@ViewBag.Error</strong>
                </div>
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input Type="submit" value="儲存" class="btn btn-warning" id="save_data" />
                    <a href="@Url.Action("ShowDish")" class="btn btn-secondary mx-2">
                        <i class="fas fa-arrow-left"></i> 返回
                    </a>
                </div>
            </div>
        </div>
    }


    <script>
        $(document).ready(function () {
            $("#CategoryList").on('change', function () {
                var cateId = $("#CategoryList option:selected").val();
                $("#CategoryId").val(cateId);
            });



            $('#upload-input').on('change', function (e) {
                var file = e.target.files[0];
                if (file) {
                    console.log(file);
                    var suffix = file.name.split('.').pop().toLowerCase();
                    var size = file.size / 1024 / 1024 < 2;
                    if (['png', 'jpeg', 'jpg'].indexOf(suffix) < 0) {
                        alert('上傳圖片只支持 png、jpeg、jpg 格式！');
                        clearFiles();
                        return;
                    }
                    if (!size) {
                        alert('上傳文件大小不能超過 2MB!');
                        return;
                    }
                    var formData = new FormData();
                    formData.append('file', file);
                    $.ajax({
                        url: "@Url.Action("Upload")",
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            console.log(response);
                            /*$('#preview-image').attr('src', '/Home/download?name=' + response.data);*/
                            $('#preview-image').attr('src', '../Img/product/' + response);
                            $('#preview-icon').hide();
                            $("#Img").attr("value", response);
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                }
            });
    });



    </script>

</div>


